---
- monsters:
    - bat
    - goblins!
    - health
    - attacking
    - ai control
- adventureLog:
    - multifonts?
    - how do components interact to make fun and surprising messages?
- refactors:
    - "some sort of generic call back for every component that matches":
        - if we can implement components as functions ;) oh baby
        - but we need state? things like health and anatomy that persist
        - perhaps only ownable components have state
- yamlEntityConfig:
    - iterate over folders
    - some sort of manifest as we will no longer know the class at runtime
    - look at data-oriented-design?
    - type object pattern?
    - some sort of way of defining animations or appearance pools
- palletes:
    - 16 base colours? 32 base colours?
    - shading? dark + light maybe warm and cold? encode in an image?
- globalConfig:
    - palletes
    - key bindings
- input:
    - menus
    - keyboard control stack in manager 
- dungonGeneration:
    - something basic
    - look at tutorials
- fieldOfView:
    - check shadowcasting tutorials
    - gorogue source
    - lighting?
    - monster eyesight?
    - monster pathfinding
