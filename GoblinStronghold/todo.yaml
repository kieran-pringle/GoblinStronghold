---
keepInMind:
    - Performance doesn't matter until it matters.
    - Have the performance be shit and do things this simple way
    - Excessive iterations to find objects
    - Just query through the context
goals:
    - turn-based tactical squad loop: xcom
    - all moves have a time cost: running gets you further but wait longer for next turn
    - mouse control: easier navigation
    - lighting and fov
    - fun items that make a run worth it
    - classes
    - skill trees and leveling up
    - inter-run progression: unlock skill tree node permenantly? like sifu
    - better gear? gold earned usable on next run? or only if you get back?
    - what are the levels? what are the monsters?
    - elemental fighting: use right weapon against right monster
---
refactors:
    - something nicer about screens and sub surfaces and such in time for menus
    - rename! only going to get worse with time if we aren't making GoblinStronghold
    - font loading and management. Is there a way to pull it into the `Constants`?
---
- dungonGeneration:
    - something basic
    - look at tutorials
- adventureLog:
    - how to not log things that the player can't see
    - how to build log messages from entities doing things
- monsters:
    - pathfinding
    - attacking
    - health
- diceRolling:
    - parse dice strings
- yamlEntityConfig:
    - iterate over folders
    - some sort of manifest as we will no longer know the class at runtime
    - look at data-oriented-design?
    - type object pattern?
    - some sort of way of defining animations or appearance pools
    - dice roll health?
- input:
    - menus
    - keyboard control stack in manager
    - mouse control?
- fieldOfView:
    - check shadowcasting tutorials
    - gorogue source
    - lighting?
    - monster eyesight?
    - monster pathfinding
- globalConfig:
    - palletes
    - key bindings
- palletes:
    - 16 base colours? 32 base colours?
    - take background from cell or things on it like water or acid
    - take foreground from sprite
    - shading? dark + light maybe warm and cold? encode in an image?
- equipment:
    - weapons
    - potions
    - armour
- doors:
    - open and close!
    - not everyone can open
    - blocks sight
- ecsImprovements:
    - references? so we are not copying results constantly
    - properly db backed? maybe we can have fun doing it ourself with b-trees or something
    - an entity is just a search tree into the component store
- saves:
    - dump ECS contents? somehow? might be easier to do if its a db
- music:
    - something simple in pico8?
- explosions:
    - destroy walls!
    - throw characters!
    - damage based on how close and collision speed
